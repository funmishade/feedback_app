---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  POSTGRES_DB: "endgame"
  POSTGRES_USER: "john"
  PGDATA: "/var/lib/postgresql/data/pgdata"

---
# Secret
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  # Replace `your-db-password` with the base64-encoded value of DB_PASS
  POSTGRES_PASSWORD: "ZXhhbXBsZQ==" # your-db-password (base64 encoded)

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-sa

---
# StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-statefulset
spec:
  serviceName: "postgres"
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: postgres-sa
      containers:
        - name: postgres
          image: postgres:14 # Use the appropriate version of PostgreSQL
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: PGDATA
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---
# ClusterIP Service for Primary
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  clusterIP: None

---
# ClusterIP Service for db-replication-1
apiVersion: v1
kind: Service
metadata:
  name: db-replication-1
spec:
  selector:
    app: postgres
    statefulset.kubernetes.io/pod-name: postgres-statefulset-1
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  clusterIP: None

---
# ClusterIP Service for db-replication-2
apiVersion: v1
kind: Service
metadata:
  name: db-replication-2
spec:
  selector:
    app: postgres
    statefulset.kubernetes.io/pod-name: postgres-statefulset-2
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  clusterIP: None




# 
---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  POSTGRES_DB: "endgame"
  POSTGRES_USER: "john"
  PGDATA: "/var/lib/postgresql/data/pgdata"

---
# Secret
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  POSTGRES_PASSWORD: "ZXhhbXBsZQ=="  # Replace with your base64-encoded DB_PASS

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-sa

---
# StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-statefulset
spec:
  serviceName: "postgres"
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: postgres-sa
      containers:
        - name: postgres
          image: postgres:14  # Use the appropriate version of PostgreSQL
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: PGDATA
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---
# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: manual-ebs-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: default
  awsElasticBlockStore:
    volumeID: vol-0fae7ffa3985e7bff  # Replace with your actual EBS Volume ID
    fsType: ext4

---
# ClusterIP Service for Primary
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  clusterIP: None

---
# ClusterIP Service for db-replication-1
apiVersion: v1
kind: Service
metadata:
  name: db-replication-1
spec:
  selector:
    app: postgres
    statefulset.kubernetes.io/pod-name: postgres-statefulset-1
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  clusterIP: None

---
# ClusterIP Service for db-replication-2
apiVersion: v1
kind: Service
metadata:
  name: db-replication-2
spec:
  selector:
    app: postgres
    statefulset.kubernetes.io/pod-name: postgres-statefulset-2
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  clusterIP: None
